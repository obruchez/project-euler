package projecteuler

import annotation.tailrec

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

class P2 {
  def solve() {
    val limit = 4000000

    @tailrec def sum(t1: Int, t2: Int, currentSum: Int): Int = {
      val nextTerm = t1 + t2
      if (nextTerm >= limit)
        currentSum
      else {
        val newSum = if (nextTerm % 2 == 0) (currentSum + nextTerm) else currentSum
        sum(t2, nextTerm, newSum)
      }
    }

    val answer = sum (1, 2, 2)
    println(answer)
  }
}